// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: proto/v1/service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Unary
type EchoUnaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoUnaryRequest) Reset() {
	*x = EchoUnaryRequest{}
	mi := &file_proto_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoUnaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoUnaryRequest) ProtoMessage() {}

func (x *EchoUnaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoUnaryRequest.ProtoReflect.Descriptor instead.
func (*EchoUnaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *EchoUnaryRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoUnaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoUnaryResponse) Reset() {
	*x = EchoUnaryResponse{}
	mi := &file_proto_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoUnaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoUnaryResponse) ProtoMessage() {}

func (x *EchoUnaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoUnaryResponse.ProtoReflect.Descriptor instead.
func (*EchoUnaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *EchoUnaryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Server streaming
type EchoServerStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoServerStreamRequest) Reset() {
	*x = EchoServerStreamRequest{}
	mi := &file_proto_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoServerStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoServerStreamRequest) ProtoMessage() {}

func (x *EchoServerStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoServerStreamRequest.ProtoReflect.Descriptor instead.
func (*EchoServerStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *EchoServerStreamRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoServerStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoServerStreamResponse) Reset() {
	*x = EchoServerStreamResponse{}
	mi := &file_proto_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoServerStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoServerStreamResponse) ProtoMessage() {}

func (x *EchoServerStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoServerStreamResponse.ProtoReflect.Descriptor instead.
func (*EchoServerStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *EchoServerStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Client streaming
type EchoClientStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoClientStreamRequest) Reset() {
	*x = EchoClientStreamRequest{}
	mi := &file_proto_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoClientStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoClientStreamRequest) ProtoMessage() {}

func (x *EchoClientStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoClientStreamRequest.ProtoReflect.Descriptor instead.
func (*EchoClientStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *EchoClientStreamRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoClientStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoClientStreamResponse) Reset() {
	*x = EchoClientStreamResponse{}
	mi := &file_proto_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoClientStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoClientStreamResponse) ProtoMessage() {}

func (x *EchoClientStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoClientStreamResponse.ProtoReflect.Descriptor instead.
func (*EchoClientStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *EchoClientStreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Bidirectional streaming
type EchoBidirectionalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoBidirectionalRequest) Reset() {
	*x = EchoBidirectionalRequest{}
	mi := &file_proto_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoBidirectionalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoBidirectionalRequest) ProtoMessage() {}

func (x *EchoBidirectionalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoBidirectionalRequest.ProtoReflect.Descriptor instead.
func (*EchoBidirectionalRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *EchoBidirectionalRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoBidirectionalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoBidirectionalResponse) Reset() {
	*x = EchoBidirectionalResponse{}
	mi := &file_proto_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoBidirectionalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoBidirectionalResponse) ProtoMessage() {}

func (x *EchoBidirectionalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoBidirectionalResponse.ProtoReflect.Descriptor instead.
func (*EchoBidirectionalResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *EchoBidirectionalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_v1_service_proto protoreflect.FileDescriptor

const file_proto_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x16proto/v1/service.proto\x12\bproto.v1\",\n" +
	"\x10EchoUnaryRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"-\n" +
	"\x11EchoUnaryResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"3\n" +
	"\x17EchoServerStreamRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"4\n" +
	"\x18EchoServerStreamResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"3\n" +
	"\x17EchoClientStreamRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"4\n" +
	"\x18EchoClientStreamResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"4\n" +
	"\x18EchoBidirectionalRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"5\n" +
	"\x19EchoBidirectionalResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xef\x02\n" +
	"\vEchoService\x12D\n" +
	"\tEchoUnary\x12\x1a.proto.v1.EchoUnaryRequest\x1a\x1b.proto.v1.EchoUnaryResponse\x12[\n" +
	"\x10EchoServerStream\x12!.proto.v1.EchoServerStreamRequest\x1a\".proto.v1.EchoServerStreamResponse0\x01\x12[\n" +
	"\x10EchoClientStream\x12!.proto.v1.EchoClientStreamRequest\x1a\".proto.v1.EchoClientStreamResponse(\x01\x12`\n" +
	"\x11EchoBidirectional\x12\".proto.v1.EchoBidirectionalRequest\x1a#.proto.v1.EchoBidirectionalResponse(\x010\x01B3Z1github.com/cornelmarck/connectrpc/gen/proto/v1;v1b\x06proto3"

var (
	file_proto_v1_service_proto_rawDescOnce sync.Once
	file_proto_v1_service_proto_rawDescData []byte
)

func file_proto_v1_service_proto_rawDescGZIP() []byte {
	file_proto_v1_service_proto_rawDescOnce.Do(func() {
		file_proto_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_service_proto_rawDesc), len(file_proto_v1_service_proto_rawDesc)))
	})
	return file_proto_v1_service_proto_rawDescData
}

var file_proto_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_v1_service_proto_goTypes = []any{
	(*EchoUnaryRequest)(nil),          // 0: proto.v1.EchoUnaryRequest
	(*EchoUnaryResponse)(nil),         // 1: proto.v1.EchoUnaryResponse
	(*EchoServerStreamRequest)(nil),   // 2: proto.v1.EchoServerStreamRequest
	(*EchoServerStreamResponse)(nil),  // 3: proto.v1.EchoServerStreamResponse
	(*EchoClientStreamRequest)(nil),   // 4: proto.v1.EchoClientStreamRequest
	(*EchoClientStreamResponse)(nil),  // 5: proto.v1.EchoClientStreamResponse
	(*EchoBidirectionalRequest)(nil),  // 6: proto.v1.EchoBidirectionalRequest
	(*EchoBidirectionalResponse)(nil), // 7: proto.v1.EchoBidirectionalResponse
}
var file_proto_v1_service_proto_depIdxs = []int32{
	0, // 0: proto.v1.EchoService.EchoUnary:input_type -> proto.v1.EchoUnaryRequest
	2, // 1: proto.v1.EchoService.EchoServerStream:input_type -> proto.v1.EchoServerStreamRequest
	4, // 2: proto.v1.EchoService.EchoClientStream:input_type -> proto.v1.EchoClientStreamRequest
	6, // 3: proto.v1.EchoService.EchoBidirectional:input_type -> proto.v1.EchoBidirectionalRequest
	1, // 4: proto.v1.EchoService.EchoUnary:output_type -> proto.v1.EchoUnaryResponse
	3, // 5: proto.v1.EchoService.EchoServerStream:output_type -> proto.v1.EchoServerStreamResponse
	5, // 6: proto.v1.EchoService.EchoClientStream:output_type -> proto.v1.EchoClientStreamResponse
	7, // 7: proto.v1.EchoService.EchoBidirectional:output_type -> proto.v1.EchoBidirectionalResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_v1_service_proto_init() }
func file_proto_v1_service_proto_init() {
	if File_proto_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_service_proto_rawDesc), len(file_proto_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_service_proto_goTypes,
		DependencyIndexes: file_proto_v1_service_proto_depIdxs,
		MessageInfos:      file_proto_v1_service_proto_msgTypes,
	}.Build()
	File_proto_v1_service_proto = out.File
	file_proto_v1_service_proto_goTypes = nil
	file_proto_v1_service_proto_depIdxs = nil
}
